ARM GAS  /tmp/ccnDQYtP.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"main.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.SystemClock_Config,"ax",%progbits
  16              		.align	1
  17              		.global	SystemClock_Config
  18              		.syntax unified
  19              		.thumb
  20              		.thumb_func
  21              		.fpu softvfp
  23              	SystemClock_Config:
  24              	.LFB67:
  25              		.file 1 "Src/main.c"
   1:Src/main.c    **** /* USER CODE BEGIN Header */
   2:Src/main.c    **** /**
   3:Src/main.c    ****   ******************************************************************************
   4:Src/main.c    ****   * @file           : main.c
   5:Src/main.c    ****   * @brief          : Main program body
   6:Src/main.c    ****   ******************************************************************************
   7:Src/main.c    ****   * @attention
   8:Src/main.c    ****   *
   9:Src/main.c    ****   * <h2><center>&copy; Copyright (c) 2019 STMicroelectronics.
  10:Src/main.c    ****   * All rights reserved.</center></h2>
  11:Src/main.c    ****   *
  12:Src/main.c    ****   * This software component is licensed by ST under Ultimate Liberty license
  13:Src/main.c    ****   * SLA0044, the "License"; You may not use this file except in compliance with
  14:Src/main.c    ****   * the License. You may obtain a copy of the License at:
  15:Src/main.c    ****   *                             www.st.com/SLA0044
  16:Src/main.c    ****   *
  17:Src/main.c    ****   ******************************************************************************
  18:Src/main.c    ****   */
  19:Src/main.c    **** /* USER CODE END Header */
  20:Src/main.c    **** 
  21:Src/main.c    **** /* Includes ------------------------------------------------------------------*/
  22:Src/main.c    **** #include "main.h"
  23:Src/main.c    **** #include "adc.h"
  24:Src/main.c    **** #include "dma.h"
  25:Src/main.c    **** #include "i2c.h"
  26:Src/main.c    **** #include "iwdg.h"
  27:Src/main.c    **** #include "rtc.h"
  28:Src/main.c    **** #include "tim.h"
  29:Src/main.c    **** #include "usart.h"
  30:Src/main.c    **** #include "usb_device.h"
  31:Src/main.c    **** #include "gpio.h"
  32:Src/main.c    **** #include "fsmc.h"
  33:Src/main.c    **** 
ARM GAS  /tmp/ccnDQYtP.s 			page 2


  34:Src/main.c    **** /* Private includes ----------------------------------------------------------*/
  35:Src/main.c    **** /* USER CODE BEGIN Includes */
  36:Src/main.c    **** #include "user_main.h"
  37:Src/main.c    **** /* USER CODE END Includes */
  38:Src/main.c    **** 
  39:Src/main.c    **** /* Private typedef -----------------------------------------------------------*/
  40:Src/main.c    **** /* USER CODE BEGIN PTD */
  41:Src/main.c    **** 
  42:Src/main.c    **** /* USER CODE END PTD */
  43:Src/main.c    **** 
  44:Src/main.c    **** /* Private define ------------------------------------------------------------*/
  45:Src/main.c    **** /* USER CODE BEGIN PD */
  46:Src/main.c    **** 
  47:Src/main.c    **** /* USER CODE END PD */
  48:Src/main.c    **** 
  49:Src/main.c    **** /* Private macro -------------------------------------------------------------*/
  50:Src/main.c    **** /* USER CODE BEGIN PM */
  51:Src/main.c    **** 
  52:Src/main.c    **** /* USER CODE END PM */
  53:Src/main.c    **** 
  54:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  55:Src/main.c    **** 
  56:Src/main.c    **** /* USER CODE BEGIN PV */
  57:Src/main.c    **** 
  58:Src/main.c    **** /* USER CODE END PV */
  59:Src/main.c    **** 
  60:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  61:Src/main.c    **** void SystemClock_Config(void);
  62:Src/main.c    **** /* USER CODE BEGIN PFP */
  63:Src/main.c    **** 
  64:Src/main.c    **** /* USER CODE END PFP */
  65:Src/main.c    **** 
  66:Src/main.c    **** /* Private user code ---------------------------------------------------------*/
  67:Src/main.c    **** /* USER CODE BEGIN 0 */
  68:Src/main.c    **** 
  69:Src/main.c    **** /* USER CODE END 0 */
  70:Src/main.c    **** 
  71:Src/main.c    **** /**
  72:Src/main.c    ****   * @brief  The application entry point.
  73:Src/main.c    ****   * @retval int
  74:Src/main.c    ****   */
  75:Src/main.c    **** int main(void)
  76:Src/main.c    **** {
  77:Src/main.c    ****   /* USER CODE BEGIN 1 */
  78:Src/main.c    **** 
  79:Src/main.c    ****   /* USER CODE END 1 */
  80:Src/main.c    ****   
  81:Src/main.c    **** 
  82:Src/main.c    ****   /* MCU Configuration--------------------------------------------------------*/
  83:Src/main.c    **** 
  84:Src/main.c    ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  85:Src/main.c    ****   HAL_Init();
  86:Src/main.c    **** 
  87:Src/main.c    ****   /* USER CODE BEGIN Init */
  88:Src/main.c    **** 
  89:Src/main.c    ****   /* USER CODE END Init */
  90:Src/main.c    **** 
ARM GAS  /tmp/ccnDQYtP.s 			page 3


  91:Src/main.c    ****   /* Configure the system clock */
  92:Src/main.c    ****   SystemClock_Config();
  93:Src/main.c    **** 
  94:Src/main.c    ****   /* USER CODE BEGIN SysInit */
  95:Src/main.c    **** 
  96:Src/main.c    ****   /* USER CODE END SysInit */
  97:Src/main.c    **** 
  98:Src/main.c    ****   /* Initialize all configured peripherals */
  99:Src/main.c    ****   MX_GPIO_Init();
 100:Src/main.c    ****   MX_DMA_Init();
 101:Src/main.c    ****   MX_ADC1_Init();
 102:Src/main.c    ****   MX_USART2_UART_Init();
 103:Src/main.c    ****   MX_FSMC_Init();
 104:Src/main.c    ****   MX_I2C1_Init();
 105:Src/main.c    ****   MX_I2C2_Init();
 106:Src/main.c    ****   MX_RTC_Init();
 107:Src/main.c    ****   MX_TIM1_Init();
 108:Src/main.c    ****   MX_TIM2_Init();
 109:Src/main.c    ****   MX_TIM3_Init();
 110:Src/main.c    ****   MX_TIM4_Init();
 111:Src/main.c    ****   MX_TIM5_Init();
 112:Src/main.c    ****   MX_TIM7_Init();
 113:Src/main.c    ****   MX_TIM8_Init();
 114:Src/main.c    ****   MX_USB_DEVICE_Init();
 115:Src/main.c    ****   MX_IWDG_Init();
 116:Src/main.c    ****   /* USER CODE BEGIN 2 */
 117:Src/main.c    **** 
 118:Src/main.c    ****   // user_main();
 119:Src/main.c    **** 
 120:Src/main.c    ****   /* USER CODE END 2 */
 121:Src/main.c    **** 
 122:Src/main.c    ****   /* Infinite loop */
 123:Src/main.c    ****   /* USER CODE BEGIN WHILE */
 124:Src/main.c    ****   while (1)
 125:Src/main.c    ****   {
 126:Src/main.c    ****     /* USER CODE END WHILE */
 127:Src/main.c    **** 
 128:Src/main.c    ****     /* USER CODE BEGIN 3 */
 129:Src/main.c    **** 
 130:Src/main.c    **** 
 131:Src/main.c    ****   }
 132:Src/main.c    ****   /* USER CODE END 3 */
 133:Src/main.c    **** }
 134:Src/main.c    **** 
 135:Src/main.c    **** /**
 136:Src/main.c    ****   * @brief System Clock Configuration
 137:Src/main.c    ****   * @retval None
 138:Src/main.c    ****   */
 139:Src/main.c    **** void SystemClock_Config(void)
 140:Src/main.c    **** {
  26              		.loc 1 140 0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 88
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30 0000 30B5     		push	{r4, r5, lr}
  31              	.LCFI0:
  32              		.cfi_def_cfa_offset 12
ARM GAS  /tmp/ccnDQYtP.s 			page 4


  33              		.cfi_offset 4, -12
  34              		.cfi_offset 5, -8
  35              		.cfi_offset 14, -4
  36 0002 97B0     		sub	sp, sp, #92
  37              	.LCFI1:
  38              		.cfi_def_cfa_offset 104
 141:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
  39              		.loc 1 141 0
  40 0004 0024     		movs	r4, #0
  41 0006 0E94     		str	r4, [sp, #56]
  42 0008 1194     		str	r4, [sp, #68]
 142:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
  43              		.loc 1 142 0
  44 000a 0794     		str	r4, [sp, #28]
  45 000c 0894     		str	r4, [sp, #32]
  46 000e 0994     		str	r4, [sp, #36]
  47 0010 0A94     		str	r4, [sp, #40]
  48 0012 0B94     		str	r4, [sp, #44]
 143:Src/main.c    ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
  49              		.loc 1 143 0
  50 0014 0194     		str	r4, [sp, #4]
  51 0016 0294     		str	r4, [sp, #8]
  52 0018 0394     		str	r4, [sp, #12]
  53 001a 0494     		str	r4, [sp, #16]
  54 001c 0594     		str	r4, [sp, #20]
  55 001e 0694     		str	r4, [sp, #24]
 144:Src/main.c    **** 
 145:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
 146:Src/main.c    ****   */
 147:Src/main.c    ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_LSI|RCC_OSCILLATORTYPE_HSE
  56              		.loc 1 147 0
  57 0020 0D23     		movs	r3, #13
  58 0022 0C93     		str	r3, [sp, #48]
 148:Src/main.c    ****                               |RCC_OSCILLATORTYPE_LSE;
 149:Src/main.c    ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
  59              		.loc 1 149 0
  60 0024 4FF48032 		mov	r2, #65536
  61 0028 0D92     		str	r2, [sp, #52]
 150:Src/main.c    ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 151:Src/main.c    ****   RCC_OscInitStruct.LSEState = RCC_LSE_ON;
  62              		.loc 1 151 0
  63 002a 0123     		movs	r3, #1
  64 002c 0F93     		str	r3, [sp, #60]
 152:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
  65              		.loc 1 152 0
  66 002e 1093     		str	r3, [sp, #64]
 153:Src/main.c    ****   RCC_OscInitStruct.LSIState = RCC_LSI_ON;
  67              		.loc 1 153 0
  68 0030 1293     		str	r3, [sp, #72]
 154:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
  69              		.loc 1 154 0
  70 0032 0225     		movs	r5, #2
  71 0034 1395     		str	r5, [sp, #76]
 155:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
  72              		.loc 1 155 0
  73 0036 1492     		str	r2, [sp, #80]
 156:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
ARM GAS  /tmp/ccnDQYtP.s 			page 5


  74              		.loc 1 156 0
  75 0038 4FF4E013 		mov	r3, #1835008
  76 003c 1593     		str	r3, [sp, #84]
 157:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
  77              		.loc 1 157 0
  78 003e 0CA8     		add	r0, sp, #48
  79 0040 FFF7FEFF 		bl	HAL_RCC_OscConfig
  80              	.LVL0:
 158:Src/main.c    ****   {
 159:Src/main.c    ****     Error_Handler();
 160:Src/main.c    ****   }
 161:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
 162:Src/main.c    ****   */
 163:Src/main.c    ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
  81              		.loc 1 163 0
  82 0044 0F23     		movs	r3, #15
  83 0046 0793     		str	r3, [sp, #28]
 164:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 165:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
  84              		.loc 1 165 0
  85 0048 0895     		str	r5, [sp, #32]
 166:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
  86              		.loc 1 166 0
  87 004a 0994     		str	r4, [sp, #36]
 167:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
  88              		.loc 1 167 0
  89 004c 4FF48063 		mov	r3, #1024
  90 0050 0A93     		str	r3, [sp, #40]
 168:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
  91              		.loc 1 168 0
  92 0052 0B94     		str	r4, [sp, #44]
 169:Src/main.c    **** 
 170:Src/main.c    ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
  93              		.loc 1 170 0
  94 0054 2946     		mov	r1, r5
  95 0056 07A8     		add	r0, sp, #28
  96 0058 FFF7FEFF 		bl	HAL_RCC_ClockConfig
  97              	.LVL1:
 171:Src/main.c    ****   {
 172:Src/main.c    ****     Error_Handler();
 173:Src/main.c    ****   }
 174:Src/main.c    ****   PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_RTC|RCC_PERIPHCLK_ADC
  98              		.loc 1 174 0
  99 005c 1323     		movs	r3, #19
 100 005e 0193     		str	r3, [sp, #4]
 175:Src/main.c    ****                               |RCC_PERIPHCLK_USB;
 176:Src/main.c    ****   PeriphClkInit.RTCClockSelection = RCC_RTCCLKSOURCE_LSE;
 101              		.loc 1 176 0
 102 0060 4FF48073 		mov	r3, #256
 103 0064 0293     		str	r3, [sp, #8]
 177:Src/main.c    ****   PeriphClkInit.AdcClockSelection = RCC_ADCPCLK2_DIV6;
 104              		.loc 1 177 0
 105 0066 4FF40043 		mov	r3, #32768
 106 006a 0393     		str	r3, [sp, #12]
 178:Src/main.c    ****   PeriphClkInit.UsbClockSelection = RCC_USBCLKSOURCE_PLL_DIV1_5;
 107              		.loc 1 178 0
 108 006c 0694     		str	r4, [sp, #24]
ARM GAS  /tmp/ccnDQYtP.s 			page 6


 179:Src/main.c    ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 109              		.loc 1 179 0
 110 006e 01A8     		add	r0, sp, #4
 111 0070 FFF7FEFF 		bl	HAL_RCCEx_PeriphCLKConfig
 112              	.LVL2:
 180:Src/main.c    ****   {
 181:Src/main.c    ****     Error_Handler();
 182:Src/main.c    ****   }
 183:Src/main.c    **** }
 113              		.loc 1 183 0
 114 0074 17B0     		add	sp, sp, #92
 115              	.LCFI2:
 116              		.cfi_def_cfa_offset 12
 117              		@ sp needed
 118 0076 30BD     		pop	{r4, r5, pc}
 119              		.cfi_endproc
 120              	.LFE67:
 122              		.section	.text.main,"ax",%progbits
 123              		.align	1
 124              		.global	main
 125              		.syntax unified
 126              		.thumb
 127              		.thumb_func
 128              		.fpu softvfp
 130              	main:
 131              	.LFB66:
  76:Src/main.c    ****   /* USER CODE BEGIN 1 */
 132              		.loc 1 76 0
 133              		.cfi_startproc
 134              		@ Volatile: function does not return.
 135              		@ args = 0, pretend = 0, frame = 0
 136              		@ frame_needed = 0, uses_anonymous_args = 0
 137 0000 08B5     		push	{r3, lr}
 138              	.LCFI3:
 139              		.cfi_def_cfa_offset 8
 140              		.cfi_offset 3, -8
 141              		.cfi_offset 14, -4
  85:Src/main.c    **** 
 142              		.loc 1 85 0
 143 0002 FFF7FEFF 		bl	HAL_Init
 144              	.LVL3:
  92:Src/main.c    **** 
 145              		.loc 1 92 0
 146 0006 FFF7FEFF 		bl	SystemClock_Config
 147              	.LVL4:
  99:Src/main.c    ****   MX_DMA_Init();
 148              		.loc 1 99 0
 149 000a FFF7FEFF 		bl	MX_GPIO_Init
 150              	.LVL5:
 100:Src/main.c    ****   MX_ADC1_Init();
 151              		.loc 1 100 0
 152 000e FFF7FEFF 		bl	MX_DMA_Init
 153              	.LVL6:
 101:Src/main.c    ****   MX_USART2_UART_Init();
 154              		.loc 1 101 0
 155 0012 FFF7FEFF 		bl	MX_ADC1_Init
 156              	.LVL7:
ARM GAS  /tmp/ccnDQYtP.s 			page 7


 102:Src/main.c    ****   MX_FSMC_Init();
 157              		.loc 1 102 0
 158 0016 FFF7FEFF 		bl	MX_USART2_UART_Init
 159              	.LVL8:
 103:Src/main.c    ****   MX_I2C1_Init();
 160              		.loc 1 103 0
 161 001a FFF7FEFF 		bl	MX_FSMC_Init
 162              	.LVL9:
 104:Src/main.c    ****   MX_I2C2_Init();
 163              		.loc 1 104 0
 164 001e FFF7FEFF 		bl	MX_I2C1_Init
 165              	.LVL10:
 105:Src/main.c    ****   MX_RTC_Init();
 166              		.loc 1 105 0
 167 0022 FFF7FEFF 		bl	MX_I2C2_Init
 168              	.LVL11:
 106:Src/main.c    ****   MX_TIM1_Init();
 169              		.loc 1 106 0
 170 0026 FFF7FEFF 		bl	MX_RTC_Init
 171              	.LVL12:
 107:Src/main.c    ****   MX_TIM2_Init();
 172              		.loc 1 107 0
 173 002a FFF7FEFF 		bl	MX_TIM1_Init
 174              	.LVL13:
 108:Src/main.c    ****   MX_TIM3_Init();
 175              		.loc 1 108 0
 176 002e FFF7FEFF 		bl	MX_TIM2_Init
 177              	.LVL14:
 109:Src/main.c    ****   MX_TIM4_Init();
 178              		.loc 1 109 0
 179 0032 FFF7FEFF 		bl	MX_TIM3_Init
 180              	.LVL15:
 110:Src/main.c    ****   MX_TIM5_Init();
 181              		.loc 1 110 0
 182 0036 FFF7FEFF 		bl	MX_TIM4_Init
 183              	.LVL16:
 111:Src/main.c    ****   MX_TIM7_Init();
 184              		.loc 1 111 0
 185 003a FFF7FEFF 		bl	MX_TIM5_Init
 186              	.LVL17:
 112:Src/main.c    ****   MX_TIM8_Init();
 187              		.loc 1 112 0
 188 003e FFF7FEFF 		bl	MX_TIM7_Init
 189              	.LVL18:
 113:Src/main.c    ****   MX_USB_DEVICE_Init();
 190              		.loc 1 113 0
 191 0042 FFF7FEFF 		bl	MX_TIM8_Init
 192              	.LVL19:
 114:Src/main.c    ****   MX_IWDG_Init();
 193              		.loc 1 114 0
 194 0046 FFF7FEFF 		bl	MX_USB_DEVICE_Init
 195              	.LVL20:
 115:Src/main.c    ****   /* USER CODE BEGIN 2 */
 196              		.loc 1 115 0
 197 004a FFF7FEFF 		bl	MX_IWDG_Init
 198              	.LVL21:
 199              	.L4:
ARM GAS  /tmp/ccnDQYtP.s 			page 8


 200 004e FEE7     		b	.L4
 201              		.cfi_endproc
 202              	.LFE66:
 204              		.section	.text.Error_Handler,"ax",%progbits
 205              		.align	1
 206              		.global	Error_Handler
 207              		.syntax unified
 208              		.thumb
 209              		.thumb_func
 210              		.fpu softvfp
 212              	Error_Handler:
 213              	.LFB68:
 184:Src/main.c    **** 
 185:Src/main.c    **** /* USER CODE BEGIN 4 */
 186:Src/main.c    **** 
 187:Src/main.c    **** /* USER CODE END 4 */
 188:Src/main.c    **** 
 189:Src/main.c    **** /**
 190:Src/main.c    ****   * @brief  This function is executed in case of error occurrence.
 191:Src/main.c    ****   * @retval None
 192:Src/main.c    ****   */
 193:Src/main.c    **** void Error_Handler(void)
 194:Src/main.c    **** {
 214              		.loc 1 194 0
 215              		.cfi_startproc
 216              		@ args = 0, pretend = 0, frame = 0
 217              		@ frame_needed = 0, uses_anonymous_args = 0
 218              		@ link register save eliminated.
 195:Src/main.c    ****   /* USER CODE BEGIN Error_Handler_Debug */
 196:Src/main.c    ****   /* User can add his own implementation to report the HAL error return state */
 197:Src/main.c    **** 
 198:Src/main.c    ****   /* USER CODE END Error_Handler_Debug */
 199:Src/main.c    **** }
 219              		.loc 1 199 0
 220 0000 7047     		bx	lr
 221              		.cfi_endproc
 222              	.LFE68:
 224              		.text
 225              	.Letext0:
 226              		.file 2 "/usr/arm-none-eabi/include/machine/_default_types.h"
 227              		.file 3 "/usr/arm-none-eabi/include/sys/_stdint.h"
 228              		.file 4 "Drivers/CMSIS/Include/core_cm3.h"
 229              		.file 5 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/system_stm32f1xx.h"
 230              		.file 6 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xe.h"
 231              		.file 7 "/usr/arm-none-eabi/include/sys/lock.h"
 232              		.file 8 "/usr/arm-none-eabi/include/sys/_types.h"
 233              		.file 9 "/usr/lib/gcc/arm-none-eabi/7.3.1/include/stddef.h"
 234              		.file 10 "/usr/arm-none-eabi/include/sys/reent.h"
 235              		.file 11 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 236              		.file 12 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc.h"
 237              		.file 13 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc_ex.h"
 238              		.file 14 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 239              		.file 15 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_adc.h"
 240              		.file 16 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_fsmc.h"
 241              		.file 17 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_sram.h"
 242              		.file 18 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_i2c.h"
 243              		.file 19 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_iwdg.h"
ARM GAS  /tmp/ccnDQYtP.s 			page 9


 244              		.file 20 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rtc.h"
 245              		.file 21 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_tim.h"
 246              		.file 22 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_uart.h"
 247              		.file 23 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
 248              		.file 24 "Inc/adc.h"
 249              		.file 25 "Inc/i2c.h"
 250              		.file 26 "Inc/iwdg.h"
 251              		.file 27 "Inc/rtc.h"
 252              		.file 28 "Inc/tim.h"
 253              		.file 29 "Inc/usart.h"
 254              		.file 30 "/usr/arm-none-eabi/include/stdlib.h"
 255              		.file 31 "Inc/fsmc.h"
 256              		.file 32 "Inc/gpio.h"
 257              		.file 33 "Inc/dma.h"
 258              		.file 34 "Inc/usb_device.h"
ARM GAS  /tmp/ccnDQYtP.s 			page 10


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccnDQYtP.s:16     .text.SystemClock_Config:0000000000000000 $t
     /tmp/ccnDQYtP.s:23     .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/ccnDQYtP.s:123    .text.main:0000000000000000 $t
     /tmp/ccnDQYtP.s:130    .text.main:0000000000000000 main
     /tmp/ccnDQYtP.s:205    .text.Error_Handler:0000000000000000 $t
     /tmp/ccnDQYtP.s:212    .text.Error_Handler:0000000000000000 Error_Handler

UNDEFINED SYMBOLS
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCCEx_PeriphCLKConfig
HAL_Init
MX_GPIO_Init
MX_DMA_Init
MX_ADC1_Init
MX_USART2_UART_Init
MX_FSMC_Init
MX_I2C1_Init
MX_I2C2_Init
MX_RTC_Init
MX_TIM1_Init
MX_TIM2_Init
MX_TIM3_Init
MX_TIM4_Init
MX_TIM5_Init
MX_TIM7_Init
MX_TIM8_Init
MX_USB_DEVICE_Init
MX_IWDG_Init
