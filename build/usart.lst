ARM GAS  /tmp/ccvH2OeS.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"usart.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.MX_USART2_UART_Init,"ax",%progbits
  16              		.align	1
  17              		.global	MX_USART2_UART_Init
  18              		.syntax unified
  19              		.thumb
  20              		.thumb_func
  21              		.fpu softvfp
  23              	MX_USART2_UART_Init:
  24              	.LFB66:
  25              		.file 1 "Src/usart.c"
   1:Src/usart.c   **** /**
   2:Src/usart.c   ****   ******************************************************************************
   3:Src/usart.c   ****   * File Name          : USART.c
   4:Src/usart.c   ****   * Description        : This file provides code for the configuration
   5:Src/usart.c   ****   *                      of the USART instances.
   6:Src/usart.c   ****   ******************************************************************************
   7:Src/usart.c   ****   * @attention
   8:Src/usart.c   ****   *
   9:Src/usart.c   ****   * <h2><center>&copy; Copyright (c) 2019 STMicroelectronics.
  10:Src/usart.c   ****   * All rights reserved.</center></h2>
  11:Src/usart.c   ****   *
  12:Src/usart.c   ****   * This software component is licensed by ST under Ultimate Liberty license
  13:Src/usart.c   ****   * SLA0044, the "License"; You may not use this file except in compliance with
  14:Src/usart.c   ****   * the License. You may obtain a copy of the License at:
  15:Src/usart.c   ****   *                             www.st.com/SLA0044
  16:Src/usart.c   ****   *
  17:Src/usart.c   ****   ******************************************************************************
  18:Src/usart.c   ****   */
  19:Src/usart.c   **** 
  20:Src/usart.c   **** /* Includes ------------------------------------------------------------------*/
  21:Src/usart.c   **** #include "usart.h"
  22:Src/usart.c   **** 
  23:Src/usart.c   **** /* USER CODE BEGIN 0 */
  24:Src/usart.c   **** 
  25:Src/usart.c   **** /* USER CODE END 0 */
  26:Src/usart.c   **** 
  27:Src/usart.c   **** UART_HandleTypeDef huart2;
  28:Src/usart.c   **** 
  29:Src/usart.c   **** /* USART2 init function */
  30:Src/usart.c   **** 
  31:Src/usart.c   **** void MX_USART2_UART_Init(void)
  32:Src/usart.c   **** {
  26              		.loc 1 32 0
ARM GAS  /tmp/ccvH2OeS.s 			page 2


  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 0
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30 0000 08B5     		push	{r3, lr}
  31              	.LCFI0:
  32              		.cfi_def_cfa_offset 8
  33              		.cfi_offset 3, -8
  34              		.cfi_offset 14, -4
  33:Src/usart.c   **** 
  34:Src/usart.c   ****   huart2.Instance = USART2;
  35              		.loc 1 34 0
  36 0002 0A48     		ldr	r0, .L5
  37 0004 0A4B     		ldr	r3, .L5+4
  38 0006 0360     		str	r3, [r0]
  35:Src/usart.c   ****   huart2.Init.BaudRate = 115200;
  39              		.loc 1 35 0
  40 0008 4FF4E133 		mov	r3, #115200
  41 000c 4360     		str	r3, [r0, #4]
  36:Src/usart.c   ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
  42              		.loc 1 36 0
  43 000e 0023     		movs	r3, #0
  44 0010 8360     		str	r3, [r0, #8]
  37:Src/usart.c   ****   huart2.Init.StopBits = UART_STOPBITS_1;
  45              		.loc 1 37 0
  46 0012 C360     		str	r3, [r0, #12]
  38:Src/usart.c   ****   huart2.Init.Parity = UART_PARITY_NONE;
  47              		.loc 1 38 0
  48 0014 0361     		str	r3, [r0, #16]
  39:Src/usart.c   ****   huart2.Init.Mode = UART_MODE_TX_RX;
  49              		.loc 1 39 0
  50 0016 0C22     		movs	r2, #12
  51 0018 4261     		str	r2, [r0, #20]
  40:Src/usart.c   ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
  52              		.loc 1 40 0
  53 001a 8361     		str	r3, [r0, #24]
  41:Src/usart.c   ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
  54              		.loc 1 41 0
  55 001c C361     		str	r3, [r0, #28]
  42:Src/usart.c   ****   if (HAL_UART_Init(&huart2) != HAL_OK)
  56              		.loc 1 42 0
  57 001e FFF7FEFF 		bl	HAL_UART_Init
  58              	.LVL0:
  59 0022 00B9     		cbnz	r0, .L4
  60              	.L1:
  43:Src/usart.c   ****   {
  44:Src/usart.c   ****     Error_Handler();
  45:Src/usart.c   ****   }
  46:Src/usart.c   **** 
  47:Src/usart.c   **** }
  61              		.loc 1 47 0
  62 0024 08BD     		pop	{r3, pc}
  63              	.L4:
  44:Src/usart.c   ****   }
  64              		.loc 1 44 0
  65 0026 FFF7FEFF 		bl	Error_Handler
  66              	.LVL1:
  67              		.loc 1 47 0
ARM GAS  /tmp/ccvH2OeS.s 			page 3


  68 002a FBE7     		b	.L1
  69              	.L6:
  70              		.align	2
  71              	.L5:
  72 002c 00000000 		.word	huart2
  73 0030 00440040 		.word	1073759232
  74              		.cfi_endproc
  75              	.LFE66:
  77              		.section	.text.HAL_UART_MspInit,"ax",%progbits
  78              		.align	1
  79              		.global	HAL_UART_MspInit
  80              		.syntax unified
  81              		.thumb
  82              		.thumb_func
  83              		.fpu softvfp
  85              	HAL_UART_MspInit:
  86              	.LFB67:
  48:Src/usart.c   **** 
  49:Src/usart.c   **** void HAL_UART_MspInit(UART_HandleTypeDef* uartHandle)
  50:Src/usart.c   **** {
  87              		.loc 1 50 0
  88              		.cfi_startproc
  89              		@ args = 0, pretend = 0, frame = 24
  90              		@ frame_needed = 0, uses_anonymous_args = 0
  91              	.LVL2:
  92 0000 30B5     		push	{r4, r5, lr}
  93              	.LCFI1:
  94              		.cfi_def_cfa_offset 12
  95              		.cfi_offset 4, -12
  96              		.cfi_offset 5, -8
  97              		.cfi_offset 14, -4
  98 0002 87B0     		sub	sp, sp, #28
  99              	.LCFI2:
 100              		.cfi_def_cfa_offset 40
  51:Src/usart.c   **** 
  52:Src/usart.c   ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
 101              		.loc 1 52 0
 102 0004 0023     		movs	r3, #0
 103 0006 0293     		str	r3, [sp, #8]
 104 0008 0393     		str	r3, [sp, #12]
 105 000a 0493     		str	r3, [sp, #16]
 106 000c 0593     		str	r3, [sp, #20]
  53:Src/usart.c   ****   if(uartHandle->Instance==USART2)
 107              		.loc 1 53 0
 108 000e 0268     		ldr	r2, [r0]
 109 0010 1B4B     		ldr	r3, .L11
 110 0012 9A42     		cmp	r2, r3
 111 0014 01D0     		beq	.L10
 112              	.LVL3:
 113              	.L7:
  54:Src/usart.c   ****   {
  55:Src/usart.c   ****   /* USER CODE BEGIN USART2_MspInit 0 */
  56:Src/usart.c   **** 
  57:Src/usart.c   ****   /* USER CODE END USART2_MspInit 0 */
  58:Src/usart.c   ****     /* USART2 clock enable */
  59:Src/usart.c   ****     __HAL_RCC_USART2_CLK_ENABLE();
  60:Src/usart.c   ****   
ARM GAS  /tmp/ccvH2OeS.s 			page 4


  61:Src/usart.c   ****     __HAL_RCC_GPIOA_CLK_ENABLE();
  62:Src/usart.c   ****     /**USART2 GPIO Configuration    
  63:Src/usart.c   ****     PA2     ------> USART2_TX
  64:Src/usart.c   ****     PA3     ------> USART2_RX 
  65:Src/usart.c   ****     */
  66:Src/usart.c   ****     GPIO_InitStruct.Pin = GPIO_PIN_2;
  67:Src/usart.c   ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
  68:Src/usart.c   ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
  69:Src/usart.c   ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
  70:Src/usart.c   **** 
  71:Src/usart.c   ****     GPIO_InitStruct.Pin = GPIO_PIN_3;
  72:Src/usart.c   ****     GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
  73:Src/usart.c   ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
  74:Src/usart.c   ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
  75:Src/usart.c   **** 
  76:Src/usart.c   ****     /* USART2 interrupt Init */
  77:Src/usart.c   ****     HAL_NVIC_SetPriority(USART2_IRQn, 5, 0);
  78:Src/usart.c   ****     HAL_NVIC_EnableIRQ(USART2_IRQn);
  79:Src/usart.c   ****   /* USER CODE BEGIN USART2_MspInit 1 */
  80:Src/usart.c   **** 
  81:Src/usart.c   ****   /* USER CODE END USART2_MspInit 1 */
  82:Src/usart.c   ****   }
  83:Src/usart.c   **** }
 114              		.loc 1 83 0
 115 0016 07B0     		add	sp, sp, #28
 116              	.LCFI3:
 117              		.cfi_remember_state
 118              		.cfi_def_cfa_offset 12
 119              		@ sp needed
 120 0018 30BD     		pop	{r4, r5, pc}
 121              	.LVL4:
 122              	.L10:
 123              	.LCFI4:
 124              		.cfi_restore_state
 125              	.LBB2:
  59:Src/usart.c   ****   
 126              		.loc 1 59 0
 127 001a 03F5E633 		add	r3, r3, #117760
 128 001e DA69     		ldr	r2, [r3, #28]
 129 0020 42F40032 		orr	r2, r2, #131072
 130 0024 DA61     		str	r2, [r3, #28]
 131 0026 DA69     		ldr	r2, [r3, #28]
 132 0028 02F40032 		and	r2, r2, #131072
 133 002c 0092     		str	r2, [sp]
 134 002e 009A     		ldr	r2, [sp]
 135              	.LBE2:
 136              	.LBB3:
  61:Src/usart.c   ****     /**USART2 GPIO Configuration    
 137              		.loc 1 61 0
 138 0030 9A69     		ldr	r2, [r3, #24]
 139 0032 42F00402 		orr	r2, r2, #4
 140 0036 9A61     		str	r2, [r3, #24]
 141 0038 9B69     		ldr	r3, [r3, #24]
 142 003a 03F00403 		and	r3, r3, #4
 143 003e 0193     		str	r3, [sp, #4]
 144 0040 019B     		ldr	r3, [sp, #4]
 145              	.LBE3:
ARM GAS  /tmp/ccvH2OeS.s 			page 5


  66:Src/usart.c   ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 146              		.loc 1 66 0
 147 0042 0423     		movs	r3, #4
 148 0044 0293     		str	r3, [sp, #8]
  67:Src/usart.c   ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 149              		.loc 1 67 0
 150 0046 0223     		movs	r3, #2
 151 0048 0393     		str	r3, [sp, #12]
  68:Src/usart.c   ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 152              		.loc 1 68 0
 153 004a 0323     		movs	r3, #3
 154 004c 0593     		str	r3, [sp, #20]
  69:Src/usart.c   **** 
 155              		.loc 1 69 0
 156 004e 0D4D     		ldr	r5, .L11+4
 157 0050 02A9     		add	r1, sp, #8
 158 0052 2846     		mov	r0, r5
 159              	.LVL5:
 160 0054 FFF7FEFF 		bl	HAL_GPIO_Init
 161              	.LVL6:
  71:Src/usart.c   ****     GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 162              		.loc 1 71 0
 163 0058 0823     		movs	r3, #8
 164 005a 0293     		str	r3, [sp, #8]
  72:Src/usart.c   ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 165              		.loc 1 72 0
 166 005c 0024     		movs	r4, #0
 167 005e 0394     		str	r4, [sp, #12]
  73:Src/usart.c   ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 168              		.loc 1 73 0
 169 0060 0494     		str	r4, [sp, #16]
  74:Src/usart.c   **** 
 170              		.loc 1 74 0
 171 0062 0DEB0301 		add	r1, sp, r3
 172 0066 2846     		mov	r0, r5
 173 0068 FFF7FEFF 		bl	HAL_GPIO_Init
 174              	.LVL7:
  77:Src/usart.c   ****     HAL_NVIC_EnableIRQ(USART2_IRQn);
 175              		.loc 1 77 0
 176 006c 2246     		mov	r2, r4
 177 006e 0521     		movs	r1, #5
 178 0070 2620     		movs	r0, #38
 179 0072 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 180              	.LVL8:
  78:Src/usart.c   ****   /* USER CODE BEGIN USART2_MspInit 1 */
 181              		.loc 1 78 0
 182 0076 2620     		movs	r0, #38
 183 0078 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 184              	.LVL9:
 185              		.loc 1 83 0
 186 007c CBE7     		b	.L7
 187              	.L12:
 188 007e 00BF     		.align	2
 189              	.L11:
 190 0080 00440040 		.word	1073759232
 191 0084 00080140 		.word	1073809408
 192              		.cfi_endproc
ARM GAS  /tmp/ccvH2OeS.s 			page 6


 193              	.LFE67:
 195              		.section	.text.HAL_UART_MspDeInit,"ax",%progbits
 196              		.align	1
 197              		.global	HAL_UART_MspDeInit
 198              		.syntax unified
 199              		.thumb
 200              		.thumb_func
 201              		.fpu softvfp
 203              	HAL_UART_MspDeInit:
 204              	.LFB68:
  84:Src/usart.c   **** 
  85:Src/usart.c   **** void HAL_UART_MspDeInit(UART_HandleTypeDef* uartHandle)
  86:Src/usart.c   **** {
 205              		.loc 1 86 0
 206              		.cfi_startproc
 207              		@ args = 0, pretend = 0, frame = 0
 208              		@ frame_needed = 0, uses_anonymous_args = 0
 209              	.LVL10:
 210 0000 08B5     		push	{r3, lr}
 211              	.LCFI5:
 212              		.cfi_def_cfa_offset 8
 213              		.cfi_offset 3, -8
 214              		.cfi_offset 14, -4
  87:Src/usart.c   **** 
  88:Src/usart.c   ****   if(uartHandle->Instance==USART2)
 215              		.loc 1 88 0
 216 0002 0268     		ldr	r2, [r0]
 217 0004 084B     		ldr	r3, .L17
 218 0006 9A42     		cmp	r2, r3
 219 0008 00D0     		beq	.L16
 220              	.LVL11:
 221              	.L13:
  89:Src/usart.c   ****   {
  90:Src/usart.c   ****   /* USER CODE BEGIN USART2_MspDeInit 0 */
  91:Src/usart.c   **** 
  92:Src/usart.c   ****   /* USER CODE END USART2_MspDeInit 0 */
  93:Src/usart.c   ****     /* Peripheral clock disable */
  94:Src/usart.c   ****     __HAL_RCC_USART2_CLK_DISABLE();
  95:Src/usart.c   ****   
  96:Src/usart.c   ****     /**USART2 GPIO Configuration    
  97:Src/usart.c   ****     PA2     ------> USART2_TX
  98:Src/usart.c   ****     PA3     ------> USART2_RX 
  99:Src/usart.c   ****     */
 100:Src/usart.c   ****     HAL_GPIO_DeInit(GPIOA, GPIO_PIN_2|GPIO_PIN_3);
 101:Src/usart.c   **** 
 102:Src/usart.c   ****     /* USART2 interrupt Deinit */
 103:Src/usart.c   ****     HAL_NVIC_DisableIRQ(USART2_IRQn);
 104:Src/usart.c   ****   /* USER CODE BEGIN USART2_MspDeInit 1 */
 105:Src/usart.c   **** 
 106:Src/usart.c   ****   /* USER CODE END USART2_MspDeInit 1 */
 107:Src/usart.c   ****   }
 108:Src/usart.c   **** } 
 222              		.loc 1 108 0
 223 000a 08BD     		pop	{r3, pc}
 224              	.LVL12:
 225              	.L16:
  94:Src/usart.c   ****   
ARM GAS  /tmp/ccvH2OeS.s 			page 7


 226              		.loc 1 94 0
 227 000c 074A     		ldr	r2, .L17+4
 228 000e D369     		ldr	r3, [r2, #28]
 229 0010 23F40033 		bic	r3, r3, #131072
 230 0014 D361     		str	r3, [r2, #28]
 100:Src/usart.c   **** 
 231              		.loc 1 100 0
 232 0016 0C21     		movs	r1, #12
 233 0018 0548     		ldr	r0, .L17+8
 234              	.LVL13:
 235 001a FFF7FEFF 		bl	HAL_GPIO_DeInit
 236              	.LVL14:
 103:Src/usart.c   ****   /* USER CODE BEGIN USART2_MspDeInit 1 */
 237              		.loc 1 103 0
 238 001e 2620     		movs	r0, #38
 239 0020 FFF7FEFF 		bl	HAL_NVIC_DisableIRQ
 240              	.LVL15:
 241              		.loc 1 108 0
 242 0024 F1E7     		b	.L13
 243              	.L18:
 244 0026 00BF     		.align	2
 245              	.L17:
 246 0028 00440040 		.word	1073759232
 247 002c 00100240 		.word	1073876992
 248 0030 00080140 		.word	1073809408
 249              		.cfi_endproc
 250              	.LFE68:
 252              		.comm	huart2,64,4
 253              		.text
 254              	.Letext0:
 255              		.file 2 "/usr/arm-none-eabi/include/machine/_default_types.h"
 256              		.file 3 "/usr/arm-none-eabi/include/sys/_stdint.h"
 257              		.file 4 "Drivers/CMSIS/Include/core_cm3.h"
 258              		.file 5 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/system_stm32f1xx.h"
 259              		.file 6 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xe.h"
 260              		.file 7 "/usr/arm-none-eabi/include/sys/lock.h"
 261              		.file 8 "/usr/arm-none-eabi/include/sys/_types.h"
 262              		.file 9 "/usr/lib/gcc/arm-none-eabi/7.3.1/include/stddef.h"
 263              		.file 10 "/usr/arm-none-eabi/include/sys/reent.h"
 264              		.file 11 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 265              		.file 12 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_gpio.h"
 266              		.file 13 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 267              		.file 14 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_uart.h"
 268              		.file 15 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
 269              		.file 16 "Inc/usart.h"
 270              		.file 17 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_cortex.h"
 271              		.file 18 "Inc/main.h"
ARM GAS  /tmp/ccvH2OeS.s 			page 8


DEFINED SYMBOLS
                            *ABS*:0000000000000000 usart.c
     /tmp/ccvH2OeS.s:16     .text.MX_USART2_UART_Init:0000000000000000 $t
     /tmp/ccvH2OeS.s:23     .text.MX_USART2_UART_Init:0000000000000000 MX_USART2_UART_Init
     /tmp/ccvH2OeS.s:72     .text.MX_USART2_UART_Init:000000000000002c $d
                            *COM*:0000000000000040 huart2
     /tmp/ccvH2OeS.s:78     .text.HAL_UART_MspInit:0000000000000000 $t
     /tmp/ccvH2OeS.s:85     .text.HAL_UART_MspInit:0000000000000000 HAL_UART_MspInit
     /tmp/ccvH2OeS.s:190    .text.HAL_UART_MspInit:0000000000000080 $d
     /tmp/ccvH2OeS.s:196    .text.HAL_UART_MspDeInit:0000000000000000 $t
     /tmp/ccvH2OeS.s:203    .text.HAL_UART_MspDeInit:0000000000000000 HAL_UART_MspDeInit
     /tmp/ccvH2OeS.s:246    .text.HAL_UART_MspDeInit:0000000000000028 $d

UNDEFINED SYMBOLS
HAL_UART_Init
Error_Handler
HAL_GPIO_Init
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
HAL_GPIO_DeInit
HAL_NVIC_DisableIRQ
